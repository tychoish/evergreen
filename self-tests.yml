bcommand_type: system
stepback: true
ignore:
    - "*.md" # don't schedule tests if a commit only changes markdown files
    - "scripts/*" # our scripts are untested, so don't schedule tests for them

post:
  - command: gotest.parse_files
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/evergreen/bin/output.*"


#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/evergreen-ci/evergreen
      - func: setup-plugins
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        params:
          optional: true
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/evergreen/bin/${task_name}.tar.gz
          remote_file: evergreen/${build_id}-${build_variant}/greenbay-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz
  - &run-go-test-suite
    # runs a make target and then uploads gotest output to
    # evergreen. The test name should correspond to a make target for
    # that suite
    name: test
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/evergreen-ci/evergreen
      - func: setup-plugins
      - func: setup-credentials
      - func: run-make
        vars: { target: "${task_name}" }
  - &run-go-test-suite-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    commands:
      - command: git.get_project
        params:
          directory: gopath/src/github.com/evergreen-ci/evergreen
      - func: setup-credentials
      - func: setup-plugins
      - func: set-up-mongodb
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: shell.exec
    params:
       script: |
         set -o errexit
         set -o verbose

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/evergreen-ci/evergreen

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env} make ${make_args|} vendor ${target}
  setup-plugins:
    command: shell.exec
    params:
      script: |
        set -o errexit

        echo "building Plugins file!"
        cat > gopath/src/github.com/evergreen-ci/evergreen/Plugins <<END_OF_PLUGINS
        ${plugins_file}
        END_OF_PLUGIN
  setup-credentials:
    - command: shell.exec
      params:
        silent: true
        script: |
          set -o errexit

          echo "building creds file!"
          cat > gopath/src/github.com/evergreen-ci/evergreen/creds.yml <<END_OF_CREDS
          credentials:  {
            github: "${github_token}",
          }

          jira:
            host: ${jiraserver}
            username: ${crowduser}
            password: ${crowdpw}

          providers:
            aws:
              aws_id: "${aws_key}"
              aws_secret: "${aws_secret}"

          auth:
            crowd:
              username: ${crowduser}
              password: ${crowdpw}
              urlroot: ${crowdserver}
          plugins:
            manifest:
              github_token: "${github_token}"
          END_OF_CREDS
  set-up-mongodb:
    - command: shell.exec
      params:
        script: |
          set -o errexit
          set -o verbose

          rm -rf mongodb
          mkdir mongodb
          cd mongodb
          curl ${mongodb_url} -o mongodb.tgz

          tar -zxvf mongodb.tgz
          chmod +x ./mongodb-*/bin/*
          mv ./mongodb-*/bin/* .
          rm -rf db_files
          rm -rf db_logs
          mkdir db_files
          mkdir db_logs
    - command: shell.exec
      params:
        background: true
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          echo "starting mongod..."
          ./mongod${extension|} --dbpath ./db_files &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          ./mongo${extension|} --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:27017"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."

#######################################
#                Tasks                #
#######################################

tasks:
  - name: coverage
    commands:
    - command: git.get_project
      params:
        directory: gopath/src/github.com/evergreen-ci/evergreen
    - func: setup-credentials
    - func: set-up-mongodb
    - func: run-make
      vars:
        target: "coverage-html"
        make_args: "-k"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter: ["gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage.html"]
        remote_file: evergreen/${task_id}/
        bucket: mciuploads
        content_type: text/html
        permissions: public-read
        display_name: "(html) coverage:"
    - command: s3.put
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        local_files_include_filter: ["gopath/src/github.com/evergreen-ci/evergreen/bin/output.*.coverage"]
        remote_file: evergreen/${task_id}/
        bucket: mciuploads
        content_type: text/plain
        permissions: public-read
        display_name: "(txt) coverage:"
  - <<: *run-build
    name: dist
  - <<: *run-build
    name: dist-race
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-hostutil
  - <<: *run-go-test-suite
    tags: ["nodb", "test", "burn_in"]
    name: test-remote
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-auth
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-cli
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-command
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-db-bsonutil
  - <<: *run-go-test-suite
    tags: ["nodb", "test"]
    name: test-agent-comm
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-agent
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-db
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-cloud-providers
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test", "burn_in"]
    name: test-cloud-providers-ec2
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-repotracker
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-scheduler
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-service
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-monitor
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-taskrunner
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-evergreen
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-notify
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-alerts
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-thirdparty
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-util
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-archive
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-validator
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-patch
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-artifact
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-host
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-build
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-event
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-model-task
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-git
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-gotest
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-attach
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-attach-xunit
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-manifest
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-shell
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-s3copy
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-expansions
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "test"]
    name: test-plugin-builtin-s3
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-hostutil
  - <<: *run-go-test-suite
    tags: ["nodb", "race", "burn_in"]
    name: race-remote
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-auth
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-cli
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-command
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-db-bsonutil
  - <<: *run-go-test-suite
    tags: ["nodb", "race"]
    name: race-agent-comm
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-agent
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-db
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race", "burn_in"]
    name: race-cloud-providers
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-cloud-providers-ec2
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-repotracker
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-scheduler
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-service
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-monitor
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-taskrunner
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-evergreen
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-notify
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-alerts
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-thirdparty
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-util
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-archive
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-validator
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-patch
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-artifact
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-host
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-build
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-event
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-model-task
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-git
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-gotest
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-attach
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-attach-xunit
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-manifest
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-shell
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-s3copy
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-expansions
  - <<: *run-go-test-suite-with-mongodb
    tags: ["db", "race"]
    name: race-plugin-builtin-s3


buildvariants:
  - name: rhel62
    display_name: RHEL 6.2
    run_on:
      - rhel62-test
      - rhel62-small
    expansions:
      build_env: "GOROOT=/opt/go DISABLE_COVERAGE=yes TEST_ARGS='evergreen.all evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.9.tgz
    tasks:
      - name: "dist"
      - name: ".test"
  - name: race-detector
    display_name: Race Detector
    run_on:
      - archlinux-test
    expansions:
      build_env: "TEST_ARGS='evergreen.all evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.9.tgz
    tasks:
      - name: "dist-race"
      - name: "coverage"
      - name: ".race !.burn_in"
  - name: osx
    display_name: OSX
    run_on:
      - osx-1010
    expansions:
      build_env: "TEST_ARGS='evergreen.all DISABLE_COVERAGE=yes evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-3.2.9.tgz
    tasks:
      - name: "dist"
      - name: ".test !.burn_in"
  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2015-small
      - windows-64-vs2013-test
      - windows-64-vs2010-test
    expansions:
      build_env: "GOROOT=c:/go DISABLE_COVERAGE=yes TEST_ARGS='evergreen.all evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-3.2.9.zip
      extension: ".exe"
    tasks:
      - name: "dist"
      - name: ".nodb .test !.burn_in"
  - name: rhel62-gccgo
    display_name: RHEL 6.2 (gccgo)
    run_on:
      - rhel62-test
      - rhel62-small
    expansions:
      mongodb_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel62-3.2.9.tgz
      build_env: "PATH=/opt/mongodbtoolchain/v2/bin:$PATH DISABLE_COVERAGE=yes TEST_ARGS='evergreen.settingsOverride=`pwd`/creds.yml'"
    tasks:
      - name: ".test"
  - name: rhel71-power
    display_name: "RHEL7.1 POWER8"
    run_on:
      - rhel71-power8-test
    expansions:
      build_env: "PATH=/opt/mongodbtoolchain/v2/bin:$PATH DISABLE_COVERAGE=yes TEST_ARGS='evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: http://downloads.10gen.com/linux/mongodb-linux-s390x-enterprise-rhel72-3.3.12.tgz
    tasks:
      - name: ".nodb .test !.burn_in"
  - name: rhel71-s390x
    display_name: "RHEL7.1 s390x"
    run_on:
      - rhel72-zseries-test
    expansions:
      build_env: "PATH=/opt/mongodbtoolchain/v2/bin:$PATH DISABLE_COVERAGE=yes TEST_ARGS='evergreen.settingsOverride=`pwd`/creds.yml'"
      mongodb_url: http://downloads.10gen.com/linux/mongodb-linux-s390x-enterprise-rhel72-3.3.12.tgz
    tasks:
      - name: ".nodb .test !.burn_in"
